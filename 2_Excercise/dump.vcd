$date
	Mon Jan 27 10:32:35 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_fourFullAdder $end
$var wire 16 ! sumFinal [15:0] $end
$var wire 4 " cOutFinal [3:0] $end
$var reg 1 # Clk $end
$var reg 16 $ a [15:0] $end
$var reg 16 % b [15:0] $end
$var reg 1 & cIn $end
$var integer 32 ' i [31:0] $end
$var integer 32 ( j [31:0] $end
$scope module fa $end
$var wire 16 ) a [15:0] $end
$var wire 16 * b [15:0] $end
$var wire 1 & cIn $end
$var wire 16 + sum [15:0] $end
$var wire 4 , cOut [3:0] $end
$var reg 4 - cOutFinal [3:0] $end
$var reg 16 . sumFinal [15:0] $end
$scope module eightToEleven $end
$var wire 4 / a [3:0] $end
$var wire 4 0 b [3:0] $end
$var wire 1 1 cIn $end
$var reg 1 2 cOut $end
$var reg 4 3 sum [3:0] $end
$var reg 5 4 tempOutput [4:0] $end
$upscope $end
$scope module fourToSeven $end
$var wire 4 5 a [3:0] $end
$var wire 4 6 b [3:0] $end
$var wire 1 7 cIn $end
$var reg 1 8 cOut $end
$var reg 4 9 sum [3:0] $end
$var reg 5 : tempOutput [4:0] $end
$upscope $end
$scope module twelveToFifteen $end
$var wire 4 ; a [3:0] $end
$var wire 4 < b [3:0] $end
$var wire 1 = cIn $end
$var reg 1 > cOut $end
$var reg 4 ? sum [3:0] $end
$var reg 5 @ tempOutput [4:0] $end
$upscope $end
$scope module zeroToThree $end
$var wire 4 A a [3:0] $end
$var wire 4 B b [3:0] $end
$var wire 1 & cIn $end
$var reg 1 C cOut $end
$var reg 4 D sum [3:0] $end
$var reg 5 E tempOutput [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1 E
b1 D
0C
b0 B
b1 A
b0 @
b0 ?
0>
0=
b0 <
b0 ;
b0 :
b0 9
08
07
b0 6
b0 5
b0 4
b0 3
02
01
b0 0
b0 /
b1 .
b0 -
b0 ,
b1 +
b0 *
b1 )
bx (
b0 '
0&
b0 %
b1 $
0#
b0 "
b1 !
$end
#1
b100000001 !
b100000001 .
b100000001 +
b1 3
b1 4
b1 0
b100000000 %
b100000000 *
b1 '
1#
#2
0#
#3
b1000000001 !
b1000000001 .
b1000000001 +
b10 3
b10 4
b10 0
b1000000000 %
b1000000000 *
b10 '
1#
#4
0#
#5
b1100000001 !
b1100000001 .
b1100000001 +
b11 3
b11 4
b11 0
b1100000000 %
b1100000000 *
b11 '
1#
#6
0#
#7
b10000000001 !
b10000000001 .
b10000000001 +
b100 3
b100 4
b100 0
b10000000000 %
b10000000000 *
b100 '
1#
#8
0#
#9
b10100000001 !
b10100000001 .
b10100000001 +
b101 3
b101 4
b101 0
b10100000000 %
b10100000000 *
b101 '
1#
#10
0#
#11
b11000000001 !
b11000000001 .
b11000000001 +
b110 3
b110 4
b110 0
b11000000000 %
b11000000000 *
b110 '
1#
#12
0#
#13
b11100000001 !
b11100000001 .
b11100000001 +
b111 3
b111 4
b111 0
b11100000000 %
b11100000000 *
b111 '
1#
#14
0#
#15
b100000000001 !
b100000000001 .
b100000000001 +
b1000 3
b1000 4
b1000 0
b100000000000 %
b100000000000 *
b1000 '
1#
#16
0#
#17
b100100000001 !
b100100000001 .
b100100000001 +
b1001 3
b1001 4
b1001 0
b100100000000 %
b100100000000 *
b1001 '
1#
#18
0#
#19
b101000000001 !
b101000000001 .
b101000000001 +
b1010 3
b1010 4
b1010 0
b101000000000 %
b101000000000 *
b1010 '
1#
#20
0#
#21
b101100000001 !
b101100000001 .
b101100000001 +
b1011 3
b1011 4
b1011 0
b101100000000 %
b101100000000 *
b1011 '
1#
#22
0#
#23
b110000000001 !
b110000000001 .
b110000000001 +
b1100 3
b1100 4
b1100 0
b110000000000 %
b110000000000 *
b1100 '
1#
#24
0#
#25
b110100000001 !
b110100000001 .
b110100000001 +
b1101 3
b1101 4
b1101 0
b110100000000 %
b110100000000 *
b1101 '
1#
#26
0#
#27
b111000000001 !
b111000000001 .
b111000000001 +
b1110 3
b1110 4
b1110 0
b111000000000 %
b111000000000 *
b1110 '
1#
#28
0#
#29
b111100000001 !
b111100000001 .
b111100000001 +
b1111 3
b1111 4
b1111 0
b111100000000 %
b111100000000 *
b1111 '
1#
#30
0#
#31
b0 !
b0 .
b0 3
b0 4
b0 +
b0 D
b0 E
b0 0
b0 A
b0 %
b0 *
b0 $
b0 )
b10000 '
1#
#32
0#
#33
1#
