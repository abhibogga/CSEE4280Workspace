$date
	Wed Jan 22 17:41:47 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_fourFullAdder $end
$var wire 16 ! sumFinal [15:0] $end
$var wire 4 " cOutFinal [3:0] $end
$var reg 1 # Clk $end
$var reg 16 $ a [15:0] $end
$var reg 16 % b [15:0] $end
$var reg 1 & cIn $end
$scope module fa $end
$var wire 16 ' a [15:0] $end
$var wire 16 ( b [15:0] $end
$var wire 1 & cIn $end
$var wire 16 ) sum [15:0] $end
$var wire 4 * cOut [3:0] $end
$var reg 4 + cOutFinal [3:0] $end
$var reg 16 , sumFinal [15:0] $end
$scope module eightToEleven $end
$var wire 4 - a [3:0] $end
$var wire 4 . b [3:0] $end
$var wire 1 / cIn $end
$var reg 1 0 cOut $end
$var reg 4 1 sum [3:0] $end
$var reg 5 2 tempOutput [4:0] $end
$upscope $end
$scope module fourToSeven $end
$var wire 4 3 a [3:0] $end
$var wire 4 4 b [3:0] $end
$var wire 1 5 cIn $end
$var reg 1 6 cOut $end
$var reg 4 7 sum [3:0] $end
$var reg 5 8 tempOutput [4:0] $end
$upscope $end
$scope module twelveToFifteen $end
$var wire 4 9 a [3:0] $end
$var wire 4 : b [3:0] $end
$var wire 1 ; cIn $end
$var reg 1 < cOut $end
$var reg 4 = sum [3:0] $end
$var reg 5 > tempOutput [4:0] $end
$upscope $end
$scope module zeroToThree $end
$var wire 4 ? a [3:0] $end
$var wire 4 @ b [3:0] $end
$var wire 1 & cIn $end
$var reg 1 A cOut $end
$var reg 4 B sum [3:0] $end
$var reg 5 C tempOutput [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1110 C
b1110 B
0A
b101 @
b1001 ?
b10101 >
b101 =
1<
1;
b1000 :
b1100 9
b10000 8
b0 7
16
05
b110 4
b1010 3
b10011 2
b11 1
10
1/
b111 .
b1011 -
b101001100001110 ,
b1110 +
b1110 *
b101001100001110 )
b1000011101100101 (
b1100101110101001 '
0&
b1000011101100101 %
b1100101110101001 $
0#
b1110 "
b101001100001110 !
$end
#1
1#
